{
  "compilerOptions": {
    "target": "es5" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
    "module": "esnext" /* Specify what module code is generated. */,
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ] /* Specify a set of bundled library declaration files that describe the target runtime environment. */,
    "allowJs": true /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */,
    "jsx": "react" /* Specify what JSX code is generated. babel loader와 같이 사용하면 preserve도 가능 */,
    "outDir": "dist",
    "removeComments": true /* Disable emitting comments. */,
    "noImplicitAny": true /* Enable error reporting for expressions and declarations with an implied 'any' type. */,
    "strict": true /* Enable all strict type-checking options. */,
    "moduleResolution": "node" /* 모듈 해석 방법 설정: 'node' (Node.js) 혹은 'classic' (TypeScript pre-1.6). */,
    "resolveJsonModule": true,
    "allowSyntheticDefaultImports": true /* Allow 'import x from y' when a module doesn't have a default export. */,
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
    "isolatedModules": true /* Ensure that each file can be safely transpiled without relying on other imports. */,
    "skipLibCheck": true /* Skip type checking all .d.ts files. */,
    "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,
    "baseUrl": "./",
    "paths": {
      "@components/*": ["src/components/*"],
      "@styles/*": ["src/styles/*"]
    }
  },
  "include": ["src", "**/*.d.ts"],
  "exclude": ["node_modules"]
}
